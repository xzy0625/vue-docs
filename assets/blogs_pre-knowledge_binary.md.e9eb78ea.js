import{_ as s,o as a,c as l,U as n}from"./chunks/framework.df9742f3.js";const D=JSON.parse('{"title":"二进制操作","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/pre-knowledge/binary.md","filePath":"blogs/pre-knowledge/binary.md","lastUpdated":1705053146000}'),e={name:"blogs/pre-knowledge/binary.md"},o=n(`<h1 id="二进制操作" tabindex="-1">二进制操作 <a class="header-anchor" href="#二进制操作" aria-label="Permalink to &quot;二进制操作&quot;">​</a></h1><p>在前端中，二进制码在平常的开发中很少会去使用到。但是在一些框架中，也会看到其作为开发的一部分存在，由于位运算速度快的特点，能达到较好的使用效果。例如<code>react</code>使用二进制表示<code>lane</code>模型、副作用类型等等，<code>vue</code>使用二进制表示当前副作用层级等等。</p><h2 id="常见的位运算" tabindex="-1">常见的位运算 <a class="header-anchor" href="#常见的位运算" aria-label="Permalink to &quot;常见的位运算&quot;">​</a></h2><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">与(AND)      或(OR)      异或(XOR)     非(NOT)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  0b001       0b001        0b011        </span></span>
<span class="line"><span style="color:#A6ACCD;">&amp; 0b010     | 0b010      ^ 0b001      ~ 0b011</span></span>
<span class="line"><span style="color:#A6ACCD;">--------    --------     --------     --------</span></span>
<span class="line"><span style="color:#A6ACCD;">  0b000       0b011        0b010        0b100</span></span></code></pre></div><ul><li>与(&amp;)：相同位都是1结果才为1。</li><li>或(|)：相同位有一个为1结果就是1</li><li>异或(^)：相同位有一个为1结果才是1，其它都是0</li><li>非(~)：按位取反</li><li>左移(&lt;&lt;): a &lt;&lt; b。 将 a 的二进制形式向左移 b (&lt; 32) 位，右边用0填充。</li><li>左移(&gt;&gt;): a &gt;&gt; b。 将 a 的二进制形式向右移 b (&lt; 32) 位，左边用0填充。</li></ul><h2 id="二进制应用" tabindex="-1">二进制应用 <a class="header-anchor" href="#二进制应用" aria-label="Permalink to &quot;二进制应用&quot;">​</a></h2><h3 id="表示状态" tabindex="-1">表示状态 <a class="header-anchor" href="#表示状态" aria-label="Permalink to &quot;表示状态&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> status1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0b001</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 状态1</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> status2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0b010</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 状态2</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> status3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0b100</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 状态3</span></span>
<span class="line"><span style="color:#A6ACCD;">mode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0b000</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 初始状态</span></span></code></pre></div><p>我们可以使用二进制的每一位表示一种状态，并且状态可以叠加，例如0b011表示位于状态1和状态2</p><h3 id="添加状态" tabindex="-1">添加状态 <a class="header-anchor" href="#添加状态" aria-label="Permalink to &quot;添加状态&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">mode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> mode </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> status1</span></span></code></pre></div><p>给<code>mode</code>添加<code>status1</code></p><h3 id="判断是不是存在类型" tabindex="-1">判断是不是存在类型 <a class="header-anchor" href="#判断是不是存在类型" aria-label="Permalink to &quot;判断是不是存在类型&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> hasStatus1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> mode </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> status1</span></span></code></pre></div><p>判断<code>mode</code>是不是存在<code>status1</code></p><h3 id="去掉某个状态" tabindex="-1">去掉某个状态 <a class="header-anchor" href="#去掉某个状态" aria-label="Permalink to &quot;去掉某个状态&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">mode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> mode </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> status1</span></span>
<span class="line"><span style="color:#A6ACCD;">mode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> mode </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;">status1</span></span></code></pre></div><p>给<code>mode</code>去掉<code>status1</code></p>`,18),t=[o];function p(c,r,i,d,C,y){return a(),l("div",null,t)}const h=s(e,[["render",p]]);export{D as __pageData,h as default};
