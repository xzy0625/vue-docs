import{_ as n,o as e,c as l,k as a,a as s,t,U as p}from"./chunks/framework.df9742f3.js";const g=JSON.parse('{"title":"parseInterpolation","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/compiler/parse/parseInterpolation.md","filePath":"blogs/compiler/parse/parseInterpolation.md","lastUpdated":1702182289000}'),r={name:"blogs/compiler/parse/parseInterpolation.md"},c=p("",2),i=a("code",null,"parseChildren",-1),d=a("code",null,"当前模板(注意是当前模板)",-1),y=a("code",null,"v-pre 指令的环境",-1),D=a("code",null,"html",-1),_=a("code",null,"pre",-1),F=a("code",null,"parseInterpolation 函数",-1);function A(o,C,h,m,u,f){return e(),l("div",null,[c,a("p",null,[s("在"),i,s("中这个分支下会走到我们插值表达式的解析。它会解析模板中的插值比如 "),a("code",null,t(o.msg),1),s("。如果"),d,s("是以双大括号开头的字符串，且不在"),y,s("下（v-pre 会跳过插值的解析，直接展示数据的原始内容，这个"),D,s("的"),_,s("标签表现一致），则会走到插值的解析处理逻辑 "),F,s("。我们也可以自定义插值符号，这也是能正常解析的。但是你必须手动设置配置项 delimiters: ['[[', ']]'] 。")])])}const b=n(r,[["render",A]]);export{g as __pageData,b as default};
